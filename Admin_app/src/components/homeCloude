"use client"

import { useContext, useEffect, useState } from "react"
import { Typography, Row, Col, Card, Button, Space, Avatar, Statistic, ConfigProvider, Tooltip } from "antd"
import {
  DashboardOutlined,
  ShopOutlined,
  DollarOutlined,
  BarChartOutlined,
  ArrowRightOutlined,
  TeamOutlined,
  EyeOutlined,
  UploadOutlined,
  RiseOutlined,
  FallOutlined,
} from "@ant-design/icons"
import { useNavigate } from "react-router-dom"
import { globalContext } from "../context/GlobalContext"
import axios from "axios"
import dayjs from "dayjs"
import { UserDto } from "../models/UserDto"

const { Title, Paragraph } = Typography

const MyHome = () => {
  const globalContextDetails = useContext(globalContext)
  const [incomes, setIncomes] = useState<number>(0)
  const [incomesPercent, setIncomesPercent] = useState<number>(0)
  const [expenses, setExpenses] = useState<number>(0)
  const [expensesPercent, setExpensesPercent] = useState<number>(0)
  const [userPercent, setUserPercent] = useState<number>(0)
  const users = globalContextDetails.usersCount || 0
  const [monthlyReport, setMonthlyReport] = useState<number | null>(null)

  const navigate = useNavigate()

  const menuItems = [
    {
      title: "לוח בקרה",
      icon: <DashboardOutlined style={{ fontSize: 32, color: "#667eea" }} />,
      description: "צפה בנתונים עדכניים של העסק שלך",
      path: "/view-data",
      color: "#667eea",
    },
    {
      title: "פרטי העסק",
      icon: <ShopOutlined style={{ fontSize: 32, color: "#52c41a" }} />,
      description: "אין לך עדיין עסק? בוא נקים אותו יחד :)",
      path: "/register-admin&business",
      color: "#52c41a",
    },
    {
      title: "הוספת תנועה בחשבון",
      icon: <DollarOutlined style={{ fontSize: 32, color: "#fa8c16" }} />,
      description: "נהל תנועות שונות בחשבון שלך",
      path: "/account-transactions",
      color: "#fa8c16",
    },
    {
      title: "דוחות",
      icon: <BarChartOutlined style={{ fontSize: 32, color: "#722ed1" }} />,
      description: "צפה בדוחות ביצועים ותחזיות",
      path: "/production-reports",
      color: "#722ed1",
    },
  ]

  const quickActions = [
    { title: "צפייה בנתונים", icon: <EyeOutlined />, path: "/view-data" },
    { title: "העלאת קבצים", icon: <UploadOutlined />, path: "/upload-file" },
    { title: "ניהול משתמשים", icon: <TeamOutlined />, path: "/user-management" },
  ]

  const statsData = [
    {
      title: "הכנסות החודש",
      value: incomes,
      prefix: "₪",
      trend: incomesPercent,
      color: "#52c41a",
      icon: <DollarOutlined />,
    },
    {
      title: "משתמשים פעילים",
      value: users,
      trend: userPercent,
      color: "#1890ff",
      icon: <TeamOutlined />,
    },
    {
      title: "מדד חודשי",
      value: monthlyReport ?? 0,
      suffix: "%",
      trend: incomesPercent,
      color: "#722ed1",
      icon: <RiseOutlined />,
    },
    {
      title: "הוצאות החודש",
      value: expenses,
      trend: expensesPercent,
      color: "#fa8c16",
      icon: <BarChartOutlined />,
    },
  ]

  const fetchUserGrowthPercent = async (businessId: number): Promise<number> => {
    try {
      const response = await axios.get<UserDto[]>(`https://localhost:7031/api/User/users-by-business/${businessId}`)
      const users = response.data

      const now = dayjs()
      const currentMonth = now.month()
      const currentYear = now.year()
      const lastMonth = now.subtract(1, "month").month()
      const lastMonthYear = now.subtract(1, "month").year()

      const usersThisMonth = users.filter((user) => {
        const created = dayjs(user.createdAt)
        return created.month() === currentMonth && created.year() === currentYear
      })

      const usersLastMonth = users.filter((user) => {
        const created = dayjs(user.createdAt)
        return created.month() === lastMonth && created.year() === lastMonthYear
      })

      const countThisMonth = usersThisMonth.length
      const countLastMonth = usersLastMonth.length

      if (countLastMonth === 0) {
        return countThisMonth > 0 ? 100 : 0
      }

      const percentGrowth = ((countThisMonth - countLastMonth) / countLastMonth) * 100
      return Math.round(percentGrowth)
    } catch (error) {
      console.error("שגיאה בעת שליפת המשתמשים:", error)
      return 0
    }
  }

  useEffect(() => {
    const fetchMonthlyReport = async () => {
      try {
        const businessId = globalContextDetails.business_global.id
        const year = new Date().getFullYear()
        const month = new Date().getMonth() + 1
        const res = await axios.get(
          `https://localhost:7031/api/Reports/monthly?businessId=${businessId}&year=${year}&month=${month}`
        )
        setMonthlyReport(res.data?.monthlyMetric ?? 0)
        setIncomes(res.data?.currentMonthIncome ?? 0)
        setIncomesPercent(res.data?.incomeChangePercent ?? 0)
        setExpenses(res.data?.currentMonthExpenses ?? 0)
        setExpensesPercent(res.data?.expensesChangePercent ?? 0)
        setUserPercent(await fetchUserGrowthPercent(businessId))
      } catch (err) {
        console.error("שגיאה בקבלת דוח חודשי:", err)
        setMonthlyReport(0)
      }
    }

    if (globalContextDetails.business_global?.id) {
      fetchMonthlyReport()
    }
  }, [globalContextDetails.business_global?.id])

  return (
    <ConfigProvider direction="rtl">
      <div className="fade-in" style={{ padding: 24, backgroundColor: "#1f1f47", minHeight: "100vh" }}>
        {/* Hero Section */}
        <div className="hero-section slide-in-right">
          <Row gutter={[32, 32]} align="middle">
            <Col xs={24} lg={14}>
              <Title
                level={1}
                style={{ color: "white", marginBottom: 16, fontSize: "2.5rem", fontWeight: 700, lineHeight: 1.1 }}
              >
                שלום, {globalContextDetails.user?.firstName || "אורח"} {globalContextDetails.user?.lastName || ""}
                <span
                  style={{
                    display: "block",
                    fontSize: "1rem",
                    fontWeight: 400,
                    marginTop: 8,
                    opacity: 0.9,
                  }}
                >
                  {new Date().toLocaleDateString("he-IL", {
                    weekday: "long",
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </span>
              </Title>
              <Title
                level={3}
                style={{ color: "rgba(255,255,255,0.9)", marginBottom: 24, fontWeight: 500, lineHeight: 1.3 }}
              >
                ברוכים הבאים למערכת BusinessMan
              </Title>
              <Paragraph
                style={{
                  color: "rgba(255,255,255,0.8)",
                  fontSize: 18,
                  marginBottom: 32,
                  lineHeight: 1.8,
                  maxWidth: 500,
                }}
              >
                הדרך החכמה והמקצועית לנהל את העסק שלך בעידן הדיגיטלי. כלים מתקדמים לניהול הכנסות, הוצאות, משתמשים ודוחות.
              </Paragraph>
              <Space size="large" wrap>
                <Button
                  type="primary"
                  size="large"
                  onClick={() => navigate("/view-data")}
                  className="hover-lift"
                  style={{
                    height: 56,
                    padding: "0 40px",
                    background: "rgba(250, 140, 22, 0.9)",
                    borderColor: "#fa8c16",
                    fontWeight: 600,
                    fontSize: 16,
                    borderRadius: 12,
                    backdropFilter: "blur(10px)",
                  }}
                >
                  צפה בנתוני העסק
                </Button>
                <Button
                  size="large"
                  onClick={() => navigate("/account-transactions")}
                  className="hover-lift glass-effect"
                  style={{
                    height: 56,
                    padding: "0 40px",
                    color: "white",
                    fontWeight: 600,
                    fontSize: 16,
                    borderRadius: 12,
                    borderColor: "rgba(255,255,255,0.3)",
                  }}
                >
                  נהל תנועות בעסק
                </Button>
              </Space>
            </Col>
            <Col xs={24} lg={10}>
              {/* ניתן להוסיף כאן תמונה או אלמנט ויזואלי */}
            </Col>
          </Row>
        </div>

        {/* Menu Cards Section */}
        <div style={{ marginTop: 48 }}>
          <Row gutter={[24, 24]}>
            {menuItems.map(({ title, icon, description, path, color }) => (
              <Col key={title} xs={24} sm={12} md={12} lg={6}>
                <Card
                  hoverable
                  onClick={() => navigate(path)}
                  style={{
                    borderRadius: 16,
                    borderColor: color,
                    borderWidth: 2,
                    cursor: "pointer",
                    height: "100%",
                    backgroundColor: "#282c44",
                    color: "white",
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "space-between",
                    padding: 24,
                  }}
                  bodyStyle={{ padding: 16 }}
                >
                  <Space size="large" align="start">
                    <Avatar size={64} style={{ backgroundColor: color, color: "white" }}>
                      {icon}
                    </Avatar>
                    <div>
                      <Title level={4} style={{ color, marginBottom: 8 }}>
                        {title}
                      </Title>
                      <Paragraph style={{ color: "rgba(255,255,255,0.7)", marginBottom: 0 }}>
                        {description}
                      </Paragraph>
                    </div>
                  </Space>
                  <div style={{ marginTop: 24, textAlign: "left" }}>
                    <Button type="link" style={{ color }}>
                      המשך <ArrowRightOutlined />
                    </Button>
                  </div>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Quick Actions Section */}
        <div style={{ marginTop: 48 }}>
          <Title level={3} style={{ color: "white", marginBottom: 24 }}>
            פעולות מהירות
          </Title>
          <Row gutter={[24, 24]}>
            {quickActions.map(({ title, icon, path }) => (
              <Col key={title} xs={24} sm={8} md={8} lg={8}>
                <Card
                  hoverable
                  onClick={() => navigate(path)}
                  style={{
                    borderRadius: 16,
                    backgroundColor: "#2c3151",
                    color: "white",
                    textAlign: "center",
                    cursor: "pointer",
                  }}
                >
                  <Avatar
                    size={48}
                    style={{ backgroundColor: "#595f8a", marginBottom: 16, color: "white" }}
                  >
                    {icon}
                  </Avatar>
                  <Title level={5} style={{ color: "white", marginBottom: 0 }}>
                    {title}
                  </Title>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Statistics Section */}
        <div style={{ marginTop: 48, marginBottom: 48 }}>
          <Title level={3} style={{ color: "white", marginBottom: 24 }}>
            סטטיסטיקות חודשיות
          </Title>
          <Row gutter={[24, 24]}>
            {statsData.map(({ title, value, prefix, suffix, trend, color, icon }) => {
              const trendIcon = trend >= 0 ? <RiseOutlined style={{ color: "#52c41a" }} /> : <FallOutlined style={{ color: "#fa541c" }} />
              const trendColor = trend >= 0 ? "#52c41a" : "#fa541c"
              return (
                <Col key={title} xs={24} sm={12} md={12} lg={6}>
                  <Card
                    style={{
                      borderRadius: 16,
                      backgroundColor: "#2c3151",
                      color: "white",
                      height: "100%",
                    }}
                    bodyStyle={{ padding: 24 }}
                  >
                    <Statistic
                      title={
                        <span style={{ color }}>
                          {icon} &nbsp; {title}
                        </span>
                      }
                      value={value}
                      valueStyle={{ color, fontWeight: "700", fontSize: 28 }}
                      prefix={prefix}
                      suffix={suffix}
                    />
                    <div style={{ marginTop: 12, display: "flex", alignItems: "center" }}>
                      {trendIcon}
                      <Text style={{ color: trendColor, marginLeft: 8, fontWeight: "600" }}>
                        {trend}%
                      </Text>
                      <Text type="secondary" style={{ marginLeft: 8 }}>
                        שינוי לעומת חודש קודם
                      </Text>
                    </div>
                  </Card>
                </Col>
              )
            })}
          </Row>
        </div>
      </div>
    </ConfigProvider>
  )
}

export default MyHome
//css:

/* App.css - עיצוב אחיד ומקצועי */

/* Import Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Assistant:wght@300;400;500;600;700&family=Rubik:wght@300;400;500;600;700&display=swap');

/* CSS Variables */
:root {
  /* Primary Colors */
  --primary-color: #667eea;
  --primary-light: #8fa4f3;
  --primary-dark: #4c63d2;
  --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  
  /* Secondary Colors */
  --secondary-color: #764ba2;
  --accent-orange: #fa8c16;
  --accent-green: #52c41a;
  --accent-purple: #722ed1;
  --accent-blue: #1890ff;
  
  /* Neutral Colors */
  --text-primary: #2d3748;
  --text-secondary: #718096;
  --text-light: #a0aec0;
  --bg-primary: #ffffff;
  --bg-secondary: #f7fafc;
  --bg-light: #edf2f7;
  --border-color: #e2e8f0;
  --border-light: #f0f0f0;
  
  /* Glass Effect */
  --glass-bg: rgba(255, 255, 255, 0.1);
  --glass-border: rgba(255, 255, 255, 0.2);
  --glass-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  
  /* Shadows */
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.07);
  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
  --shadow-xl: 0 20px 25px rgba(0, 0, 0, 0.15);
  
  /* Spacing */
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;
  --spacing-2xl: 48px;
  
  /* Border Radius */
  --radius-sm: 6px;
  --radius-md: 10px;
  --radius-lg: 16px;
  --radius-xl: 20px;
  
  /* Typography */
  --font-primary: 'Assistant', 'Rubik', 'Heebo', sans-serif;
  --font-size-xs: 12px;
  --font-size-sm: 14px;
  --font-size-base: 16px;
  --font-size-lg: 18px;
  --font-size-xl: 20px;
  --font-size-2xl: 24px;
  --font-size-3xl: 32px;
  
  /* Transitions */
  --transition-fast: 0.15s ease;
  --transition-normal: 0.3s ease;
  --transition-slow: 0.5s ease;
}

/* Global Styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-primary);
  color: var(--text-primary);
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  min-height: 100vh;
  direction: rtl;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Scrollbar Styling */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--bg-light);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: var(--primary-color);
  border-radius: 4px;
  transition: background var(--transition-normal);
}

::-webkit-scrollbar-thumb:hover {
  background: var(--primary-dark);
}

/* Layout Styles */
.main-layout {
  transition: all var(--transition-normal);
  background: transparent;
}

.main-header {
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.95) !important;
  border-bottom: 1px solid var(--border-light);
  box-shadow: var(--shadow-sm);
}

.main-content {
  background: transparent;
  position: relative;
}

.content-wrapper {
  position: relative;
  z-index: 1;
}

/* Hero Section */
.hero-section {
  background: var(--primary-gradient);
  padding: var(--spacing-2xl) var(--spacing-lg);
  border-radius: var(--radius-xl);
  margin-bottom: var(--spacing-2xl);
  position: relative;
  overflow: hidden;
  box-shadow: var(--shadow-xl);
}

.hero-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><g fill="rgba(255,255,255,0.1)" fill-opacity="0.1"><circle cx="30" cy="30" r="2"/></g></g></svg>');
  animation: float 20s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(180deg); }
}

/* Card Styles */
.stats-card {
  background: var(--bg-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  transition: all var(--transition-normal);
  overflow: hidden;
  position: relative;
}

.stats-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--primary-gradient);
  transform: scaleX(0);
  transition: transform var(--transition-normal);
}

.stats-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

.stats-card:hover::before {
  transform: scaleX(1);
}

.feature-card {
  background: var(--bg-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  transition: all var(--transition-normal);
  overflow: hidden;
  position: relative;
}

.feature-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--primary-gradient);
  opacity: 0;
  transition: opacity var(--transition-normal);
  z-index: 0;
}

.feature-card:hover {
  transform: translateY(-8px);
  box-shadow: var(--shadow-xl);
  border-color: var(--primary-color);
}

.feature-card:hover::after {
  opacity: 0.03;
}

.feature-card .ant-card-body {
  position: relative;
  z-index: 1;
}

.icon-wrapper {
  width: 80px;
  height: 80px;
  border-radius: var(--radius-lg);
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto var(--spacing-lg);
  transition: all var(--transition-normal);
}

.feature-card:hover .icon-wrapper {
  transform: scale(1.1);
}

.testimonial-section {
  background: var(--primary-gradient);
  border: none;
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-xl);
  overflow: hidden;
  position: relative;
}

.testimonial-section .ant-card-body {
  padding: var(--spacing-2xl);
  position: relative;
  z-index: 1;
}

.testimonial-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg width="100" height="100" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><g fill="rgba(255,255,255,0.1)"><polygon points="50 0 60 40 100 50 60 60 50 100 40 60 0 50 40 40"/></g></svg>');
  animation: rotate 30s linear infinite;
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Sidebar Styles */
.desktop-sider {
  background: var(--bg-primary) !important;
  border-left: 1px solid var(--border-light);
  backdrop-filter: blur(10px);
}

.desktop-sider .ant-layout-sider-children {
  background: var(--bg-primary);
}

.logo-section {
  position: relative;
  background: var(--bg-secondary);
}

.logo-avatar {
  transition: all var(--transition-normal);
}

.logo-avatar:hover {
  transform: scale(1.05);
}

.logo-title {
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-weight: 700;
}

.sidebar-menu {
  background: transparent !important;
}

.sidebar-menu .ant-menu-item {
  border-radius: var(--radius-md);
  margin: var(--spacing-xs) 0;
  transition: all var(--transition-normal);
  position: relative;
  overflow: hidden;
}

.sidebar-menu .ant-menu-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--primary-gradient);
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.sidebar-menu .ant-menu-item:hover::before {
  opacity: 0.1;
}

.sidebar-menu .ant-menu-item-selected {
  background: var(--primary-gradient) !important;
  color: white !important;
}

.sidebar-menu .ant-menu-item-selected .ant-menu-title-content {
  color: white !important;
}

.sidebar-menu .ant-menu-item-selected .anticon {
  color: white !important;
}

/* Header Styles */
.header-icon {
  transition: all var(--transition-normal);
}

.header-icon:hover {
  transform: rotate(360deg);
}

.header-title {
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-weight: 600;
}

.nav-btn {
  border-radius: var(--radius-md);
  transition: all var(--transition-normal);
  position: relative;
  overflow: hidden;
}

.nav-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--primary-gradient);
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.nav-btn:hover::before {
  opacity: 0.1;
}

.menu-toggle-btn {
  border-radius: var(--radius-md);
  transition: all var(--transition-normal);
}

.menu-toggle-btn:hover {
  background: var(--primary-color);
  color: white;
  transform: scale(1.05);
}

/* Button Styles */
.ant-btn {
  border-radius: var(--radius-md);
  font-weight: 500;
  transition: all var(--transition-normal);
  position: relative;
  overflow: hidden;
  font-family: var(--font-primary);
}

.ant-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  transition: left var(--transition-normal);
}

.ant-btn:hover::before {
  left: 100%;
}

.ant-btn-primary {
  background: var(--primary-gradient);
  border: none;
  box-shadow: var(--shadow-sm);
}

.ant-btn-primary:hover {
  background: var(--primary-gradient);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

/* Input Styles */
.ant-input,
.ant-input-number,
.ant-select-selector,
.ant-picker {
  border-radius: var(--radius-md);
  border: 2px solid var(--border-color);
  transition: all var(--transition-normal);
  font-family: var(--font-primary);
}

.ant-input:focus,
.ant-input-number:focus,
.ant-select-focused .ant-select-selector,
.ant-picker:hover,
.ant-picker-focused {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

/* Form Styles */
.ant-form-item-label > label {
  font-weight: 600;
  color: var(--text-primary);
  font-family: var(--font-primary);
}

/* Table Styles */
.ant-table {
  border-radius: var(--radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-md);
}

.ant-table-thead > tr > th {
  background: var(--bg-secondary);
  font-weight: 600;
  color: var(--text-primary);
  border-bottom: 2px solid var(--border-color);
}

.ant-table-tbody > tr:hover > td {
  background: rgba(102, 126, 234, 0.05);
}

/* Drawer Styles */
.mobile-drawer .ant-drawer-body {
  padding: 0;
  background: var(--bg-primary);
}

.mobile-drawer .ant-drawer-header {
  background: var(--bg-secondary);
  border-bottom: 1px solid var(--border-light);
}

/* Statistic Styles */
.ant-statistic-title {
  font-weight: 600;
  color: var(--text-secondary);
  font-family: var(--font-primary);
}

.ant-statistic-content {
  font-family: var(--font-primary);
}

/* Typography Overrides */
.ant-typography h1,
.ant-typography h2,
.ant-typography h3,
.ant-typography h4,
.ant-typography h5 {
  font-family: var(--font-primary);
  font-weight: 600;
}

/* Loading Spinner */
.ant-spin-dot-item {
  background: var(--primary-color);
}

/* Message Styles */
.ant-message .ant-message-notice-content {
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
}

/* Modal Styles */
.ant-modal {
  border-radius: var(--radius-lg);
}

.ant-modal-header {
  background: var(--bg-secondary);
  border-bottom: 1px solid var(--border-light);
  border-radius: var(--radius-lg) var(--radius-lg) 0 0;
}

/* Responsive Design */
@media (max-width: 768px) {
  .hero-section {
    padding: var(--spacing-lg);
    margin-top: 0 !important;
  }
  
  .feature-card,
  .stats-card {
    margin-bottom: var(--spacing-md);
  }
  
  .content-wrapper {
    padding: var(--spacing-md);
  }
}

@media (max-width: 480px) {
  .hero-section {
    padding: var(--spacing-md);
  }
  
  .icon-wrapper {
    width: 60px;
    height: 60px;
  }
}

/* Animation Classes */
.fade-in {
  animation: fadeIn var(--transition-slow) ease-in;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.slide-in-right {
  animation: slideInRight var(--transition-slow) ease-out;
}

@keyframes slideInRight {
  from { transform: translateX(100px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

.bounce-in {
  animation: bounceIn var(--transition-slow) ease-out;
}

@keyframes bounceIn {
  0% { transform: scale(0.3); opacity: 0; }
  50% { transform: scale(1.05); }
  70% { transform: scale(0.9); }
  100% { transform: scale(1); opacity: 1; }
}

/* Utility Classes */
.glass-effect {
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  box-shadow: var(--glass-shadow);
}

.gradient-text {
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.hover-lift {
  transition: transform var(--transition-normal);
}

.hover-lift:hover {
  transform: translateY(-4px);
}

/* Custom Scrollbar for Sidebar */
.ant-layout-sider-children::-webkit-scrollbar {
  width: 4px;
}

.ant-layout-sider-children::-webkit-scrollbar-track {
  background: transparent;
}

.ant-layout-sider-children::-webkit-scrollbar-thumb {
  background: var(--primary-color);
  border-radius: 2px;
}

/* Print Styles */
@media print {
  .desktop-sider,
  .main-header,
  .mobile-drawer {
    display: none !important;
  }
  
  .main-layout {
    margin-right: 0 !important;
    width: 100% !important;
  }
}